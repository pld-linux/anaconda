diff -ur anaconda-11.2.0.24.org/iw/timezone_gui.py anaconda-11.2.0.24/iw/timezone_gui.py
--- anaconda-11.2.0.24.org/iw/timezone_gui.py	2007-01-30 19:54:05.000000000 +0100
+++ anaconda-11.2.0.24/iw/timezone_gui.py	2007-02-20 18:36:25.274623000 +0100
@@ -43,7 +43,7 @@
         gtk.glade.set_custom_handler(self.custom_widget_handler)
 
         # Set the default now.  We'll fix it for real in getScreen.
-        self.default = "America/New York"
+        self.default = "Europe/Warsaw"
 
         self.zonetab = zonetab.ZoneTab()
 
@@ -99,7 +99,7 @@
             asUTC = 0
 
         if (string.find(self.default, "UTC") != -1):
-            self.default = "America/New_York"
+            self.default = "Europe/Warsaw"
 
         self.default = self.default.replace("_", " ")
 
@@ -151,7 +151,7 @@
                                   weight=pango.WEIGHT_BOLD)
                 self.markers[entry.tz] = marker
 
-                if entry.tz == "America/New York":
+                if entry.tz == "Europe/Warsaw":
                     # In case the /etc/sysconfig/clock is messed up, use New
                     # York as the default.
                     self.fallbackEntry = entry
diff -ur anaconda-11.2.0.24.org/timezone.py anaconda-11.2.0.24/timezone.py
--- anaconda-11.2.0.24.org/timezone.py	2007-01-17 23:49:50.000000000 +0100
+++ anaconda-11.2.0.24/timezone.py	2007-02-20 19:07:07.498623000 +0100
@@ -13,6 +13,7 @@
 
 import shutil
 import iutil
+import string
 from flags import flags
 
 import logging
@@ -44,12 +45,32 @@
 
 	f = open(instPath + "/etc/sysconfig/clock", "w")
 
-	f.write('ZONE="%s"\n' % self.tz)
+	f.write('# Should the hardware clock be kept in Coordinated Universal Time (instead of local time).\n')
 	f.write("UTC=%s\n" % bool(self.utc))
+	f.write('# true means your machine uses epoch 1980 in its hardware clock\n')
 	f.write("ARC=%s\n" % bool(self.arc))
-
+	f.write('# true means your machine uses epoch 1900 in its hardware clock\n')
+	f.write("SRM=false\n")
 	f.close()
 
+	# FIXME: solution for timezones like EET
+	(area, zone) = string.split(self.tz, "/")
+
+	f = open(instPath + "/etc/sysconfig/timezone", "w")
+	f.write('# Time zone information.\n')
+	f.write('# Directory containing zone information files.\n')
+	f.write('ZONE_INFO_DIR="/usr/share/zoneinfo"\n')
+	f.write("\n");
+	f.write('# Scheme you would like to use in your system.\n')
+	f.write('ZONE_INFO_SCHEME="posix"\n')
+	f.write("\n")
+	f.write('# Area (sometimes may be empty)\n')
+	f.write('ZONE_INFO_AREA="%s"\n' % area)
+	f.write("\n")
+	f.write('# Name of the time zone for your system.\n')
+	f.write('TIME_ZONE="%s"\n' % zone)
+	f.write("\n");
+
     def getTimezoneInfo(self):
 	return (self.tz, self.utc, self.arc)
 
